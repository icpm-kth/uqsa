% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/runModel.R
\name{simulator.R}
\alias{simulator.R}
\title{This creates a closure that simulates the model}
\usage{
simulator.R(experiments, model, parMap = identity)
}
\arguments{
\item{experiments}{a list of experiments to simulate: inital values, inputs, time vectors, initial times}

\item{parMap}{the model will be called with parMap(parABC); so any parameter transformation can happen there.}

\item{modelName}{a string (with optional comment indicating an .so file) which points out the model to simulate}

\item{parABC}{the parameters for the model, subject to change by parMap.}
}
\value{
a closure that returns the model's output for a given parameter vector
}
\description{
This is a shorter alternative to the runModel function (R, deSolve backend).
}
\details{
It returns a closure around:
- experiments,
- the model, and
- parameter mapping

The returned function depends only on parABC (the sampling parameters).
}
\examples{
   model.sbtab <- SBtabVFGEN::sbtab_from_tsv(dir(pattern="[.]tsv$"))
   experiments <- SBtabVFGEN::sbtab.data(model.sbtab)
   parABC <- SBtabVFGEN::sbtab.quantity(model.sbtab$Parameter)

   source("<model name>.R") # this defines the `model` variable
   simulate <- simulator.R(experiments, model,  parABC)
   yf <- sim(parABC)
}
