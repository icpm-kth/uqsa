% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/runModel.R
\name{checkModel}
\alias{checkModel}
\title{checkModel tries to establish the simulation file for a given model}
\usage{
checkModel(modelName, modelFile = NULL)
}
\arguments{
\item{modelName}{a string}

\item{modelFile}{a string, if the model file is different from
"modelName.R". If the file name ends in .c, the c source will be
compiled to a shared library.}
}
\value{
modelName with an additional comment about which file to use for simulations
}
\description{
This function returns the model name, with some additional comments
about the file
}
\details{
As an alternative to this function, it is sufficient to write

\if{html}{\out{<div class="sourceCode">}}\preformatted{modelName <- "test_ode_model"             # or some other model name
comment(modelName) <- "test_ode_model.so"
}\if{html}{\out{</div>}}

This function will not attempt to find a model file, other than in
the current directory. But, \code{checkModel} will compile a GSL
compatible C source file into a shared object if \code{modelFile} ends
with \code{.c} and stop if that doesn't work. The compiler is called
using a system call, which may be incorrect for your system -- if
this funciton fails, you'll have to make the shared library of the
model using the correct compiler and options for your system.

In any case, this function stops execution if the model file
doesn't exist, because simulations are not possible.
}
