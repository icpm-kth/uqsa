% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/sensitivity.R
\name{funcSensitivity}
\alias{funcSensitivity}
\title{funcSensitivity transforms state sensitivity into the sensitivity of output functions}
\usage{
funcSensitivity(
  parMCMC,
  experiments,
  simulations,
  model,
  parMap = defaultParMap,
  parMapJac = defaultParMapJac
)
}
\arguments{
\item{parMCMC}{Markov chain variables}

\item{experiments}{list of experiments}

\item{simulations}{list of simulation results}

\item{model}{a list of model functions, including funcJac, and funcJacp}

\item{parMap}{a parameter transformation function}

\item{parMapJac}{transformation jacobian: t(∇) × parMap}
}
\value{
Sh[\link{i}][,,k] a list of 3d-arrays, one item per expariment
(i), and a third dimension for the time variable (finite set of
observations)
}
\description{
funcSensitivity transforms state sensitivity into the sensitivity of output functions
}
\details{
The state sensitivity matrix:\preformatted{           d state(time[k],state, param)[i]
S[i,j,k] = --------------------------------  ,
           d param[j]
}

where param are the raw model parameters.
This matrix is calculated as an intermediate and then transformed into:\preformatted{            d func(time[k], state, c(parMap(parMCMC),input))[i]
Sh[i,j,k] = --------------------------------------------------
            d parMCMC[j]
}

where parMCMC is the Markov chain variable and usually shorter than
param as we typically don't sample all of the model's
parameters. Some model parameters may be known, some may be input
parameters not intrinsic to the model but related to the
experimental setup (that is why parMCMC and param are different).

This transformation requires the output function jacobian (funcJac)
and the parameter jacobian (funcJacp) in the model variable.

As we transform the parameters themselves, the chain rule requests
parMapJac\link{l,k} = d param\link{l} / d parMCMC\link{k}
}
