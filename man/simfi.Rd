% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/runModel.R
\name{simfi}
\alias{simfi}
\title{This creates a closure that simulates the model, similar to simulator.c}
\usage{
simfi(experiments, modelName, parMap = identity, method = 0)
}
\arguments{
\item{experiments}{a list of experiments to simulate: inital
values, inputs, time vectors, initial times}

\item{modelName}{a string (with optional comment indicating an .so
file) which points out the model to simulate}

\item{parMap}{the model will be called with parMap(parABC); so any
parameter transformation can happen there.}

\item{parABC}{the parameters for the model, subject to change by
parMap.}
}
\value{
a closure that returns the model's output for a given
parameter vector, and approximate sensitivity matrices, for
each state variable, function, time-point, and parameter
vector.
}
\description{
This is a shorter alternative to simulator.c (C backend). It also
returns the log-likelihood, Fisher Information, and the gradient of
the log-likelihood, under the assumption that the measurement error
is Gaussian.
}
\details{
It returns a closure around:
- experiments,
- the model, and
- parameter mapping

The returned function depends only on parABC (the sampling
parameters). The simulation will be done suing the rgsl backend.

This version of the function does not use the parallel package at
all and cannot add noise to the simulations.
}
\examples{
 #  model.sbtab <- SBtabVFGEN::sbtab_from_tsv(dir(pattern="[.]tsv$"))
 #  experiments <- SBtabVFGEN::sbtab.data(model.sbtab)
 #  parABC <- SBtabVFGEN::sbtab.quantity(model.sbtab$Parameter)

 #  modelName <- checkModel("<insert_model_name>_gvf.c")
 #  simulate <- simc(experiments, modelName,  parABC)
 #  yf <- simulate(parABC)
}
