% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/mcmc.R
\name{mcmcUpdate}
\alias{mcmcUpdate}
\title{This function proposes an MCMC candidate variable, and either accepts or rejects the candidate}
\usage{
mcmcUpdate(
  simulate,
  experiments,
  model,
  logLikelihood,
  gradLogLikelihood,
  fisherInformation,
  fisherInformationPrior,
  dprior,
  gprior
)
}
\arguments{
\item{simulate}{a function that simulates the model for a given
parMCMC}

\item{experiments}{the list of experiments (with simulation
instructions)}

\item{model}{the list of model functions}

\item{logLikelihood}{a function that calculates log-likelihood
values for given parMCMC}

\item{gradLogLikelihood}{a function that calculates the gradient of
the log-likelihood for given parMCMC}

\item{fisherInformation}{a function that calculates approximates
Fisher information matrices}

\item{fisherInformationPrior}{a constant matrix, the prior
distributions fisher information}

\item{dprior}{prior density function}

\item{gprior}{gradient of the prior density}
}
\value{
a function that returns possibly updated states of the
Markov chain
}
\description{
This function receives a current MCMC variable, then calculates a
possible successor and returns it in the case of acceptance. It
returns the (old) current state upon rejection of the candidate.
}
\details{
The Markov chain has a current state (the MCMC variable, often x in
literature), but in the context of sampling the MCMC variables are
used as the parameters to a scientific model of some sort (and
these often have state variables, also x, or y). This is why we
call the variables parMCMC (parABC), or
par{Current|Given|Proposal}, and similar.
}
